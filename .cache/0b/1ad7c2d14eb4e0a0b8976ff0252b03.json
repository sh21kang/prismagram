{"id":"CZ/D","dependencies":[{"name":"/Users/sangho/dev/nomad/prismagram/node_modules/apollo-server-core/dist/graphqlOptions.js.map","includedInParent":true,"mtime":1558453009116},{"name":"/Users/sangho/dev/nomad/prismagram/node_modules/apollo-server-core/src/graphqlOptions.ts","includedInParent":true,"mtime":1558453009375},{"name":"/Users/sangho/dev/nomad/prismagram/package.json","includedInParent":true,"mtime":1558526927558},{"name":"/Users/sangho/dev/nomad/prismagram/.babelrc","includedInParent":true,"mtime":1558528163945},{"name":"/Users/sangho/dev/nomad/prismagram/node_modules/apollo-server-core/package.json","includedInParent":true,"mtime":0}],"generated":{"js":"\"use strict\";var e=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,a){function i(e){try{l(r.next(e))}catch(t){a(t)}}function u(e){try{l(r.throw(e))}catch(t){a(t)}}function l(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(i,u)}l((r=r.apply(e,t||[])).next())})},t=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(n=1,r&&(o=r[2&a[0]?\"return\":a[0]?\"throw\":\"next\"])&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[0,o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(u){a=[6,u],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};function n(n){for(var r=[],o=1;o<arguments.length;o++)r[o-1]=arguments[o];return e(this,void 0,void 0,function(){var e;return t(this,function(t){switch(t.label){case 0:if(\"function\"!=typeof n)return[3,5];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,n.apply(void 0,r)];case 2:return[2,t.sent()];case 3:throw e=t.sent(),new Error(\"Invalid options provided to ApolloServer: \"+e.message);case 4:return[3,6];case 5:return[2,n];case 6:return[2]}})})}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.resolveGraphqlOptions=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":1356}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":1365}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":1367}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1374}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1378}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1380}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1383}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1385}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1387}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1389}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1399}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1406}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1410}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1412}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1414}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1417}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":1427}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":1,"column":1527}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":1,"column":1546}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":1548}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":1554}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":1555}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":1557}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":1,"column":1577}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":1,"column":1606}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":1,"column":1607}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":19},"generated":{"line":1,"column":1609}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":26},"generated":{"line":1,"column":1611}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":26},"generated":{"line":1,"column":1622}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":30},"generated":{"line":1,"column":1624}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":1635}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":1641}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":1642}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":1,"column":1644}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":48,"column":13},"generated":{"line":1,"column":1646}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":1,"column":1661}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":1678}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":1,"column":1682}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":1,"column":1688}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":67},"generated":{"line":1,"column":1733}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":50,"column":69},"generated":{"line":1,"column":1735}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":1770}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":1776}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":1,"column":1777}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":53,"column":11},"generated":{"line":1,"column":1779}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":1859}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":1867}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":1889}}],"sources":{"../src/graphqlOptions.ts":"import {\n  GraphQLSchema,\n  ValidationContext,\n  GraphQLFieldResolver,\n} from 'graphql';\nimport { LogFunction } from './runQuery';\nimport { GraphQLExtension } from 'graphql-extensions';\nimport { CacheControlExtensionOptions } from 'apollo-cache-control';\n\n/*\n * GraphQLServerOptions\n *\n * - schema: an executable GraphQL schema used to fulfill requests.\n * - (optional) formatError: Formatting function applied to all errors before response is sent\n * - (optional) rootValue: rootValue passed to GraphQL execution\n * - (optional) context: the context passed to GraphQL execution\n * - (optional) logFunction: a function called for logging events such as execution times\n * - (optional) formatParams: a function applied to the parameters of every invocation of runQuery\n * - (optional) validationRules: extra validation rules applied to requests\n * - (optional) formatResponse: a function applied to each graphQL execution result\n * - (optional) fieldResolver: a custom default field resolver\n * - (optional) debug: a boolean that will print additional debug logging if execution errors occur\n *\n */\nexport interface GraphQLServerOptions<TContext = any> {\n  schema: GraphQLSchema;\n  formatError?: Function;\n  rootValue?: any;\n  context?: TContext;\n  logFunction?: LogFunction;\n  formatParams?: Function;\n  validationRules?: Array<(context: ValidationContext) => any>;\n  formatResponse?: Function;\n  fieldResolver?: GraphQLFieldResolver<any, TContext>;\n  debug?: boolean;\n  tracing?: boolean;\n  cacheControl?: boolean | CacheControlExtensionOptions;\n}\n\nexport default GraphQLServerOptions;\n\nexport async function resolveGraphqlOptions(\n  options: GraphQLServerOptions | Function,\n  ...args\n): Promise<GraphQLServerOptions> {\n  if (typeof options === 'function') {\n    try {\n      return await options(...args);\n    } catch (e) {\n      throw new Error(`Invalid options provided to ApolloServer: ${e.message}`);\n    }\n  } else {\n    return options;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"65ee1e5c246ece8ea6f7d1b594e50839","cacheData":{"env":{}}}